<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.0">
  <POU Name="MAIN" Id="{7c90e337-da70-41ec-ab5c-8c28e27e5b13}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	OpenFlap,
	CloseFlap,
	OpenSlit,
	CloseSlit: BOOL;
	FlapDelay,
	SlitDelay:	TON;
	FlapTimer,
	SlitTimer:	TP;
	FlapDone,
	SlitDone: F_TRIG;
	TimeOut: TON;
	(*
	Serial: MDP5001_600_C98F2494;
	SerialLineControl: SerialLineControl;
	SerialError: INT;
	RxBuffer,
	TxBuffer: ComBuffer;
	*)
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF GVL_Dome.ControlWord.0 THEN // we have valid data
	OpenFlap := GVL_Dome.ControlWord.1;
	OpenSlit := GVL_Dome.ControlWord.1;
	CloseFlap := GVL_Dome.ControlWord.2;
	CloseSlit := GVL_Dome.ControlWord.2;
END_IF

TimeOut(IN := NOT GVL_Dome.ControlWord.0, PT := T#30S);
IF TimeOut.Q THEN
	CloseFlap := TRUE;
	CloseSlit := TRUE;
END_IF

IF CloseFlap THEN
	OpenFlap := FALSE;
	GVL_Dome.Flap_open := FALSE;
END_IF
IF OpenFlap THEN
	GVL_Dome.Flap_open := TRUE;
END_IF
IF CloseSlit THEN
	OpenSlit := FALSE;
	GVL_Dome.Slit_open := FALSE;
END_IF

IF OpenSlit THEN
	GVL_Dome.Slit_open := TRUE;
END_IF

FlapDelay(  IN := OpenFlap OR CloseFlap,
			PT := T#1000MS);
			
FlapTimer(  IN := FlapDelay.Q,
			PT := T#30S,
			Q => GVL_Dome.Flap_enable);

FlapDone(CLK := GVL_Dome.Flap_enable);
// deactivate open or close signal if enable becomes false;
IF FlapDone.Q THEN
	OpenFlap := FALSE;
	CloseFlap := FALSE;
END_IF
			
SlitDelay(  IN := OpenSlit OR CloseSlit, 
			PT := T#1000MS); 

SlitTimer(  IN := SlitDelay.Q,
			PT := T#70S,
			Q => GVL_Dome.Slit_enable); 
			
SlitDone(CLK := GVL_Dome.Slit_enable);

IF SlitDone.Q THEN
	OpenSLit := FALSE;
	CloseSlit := FALSE;
END_IF
(*
SerialLineControl(Mode := ComSerialLineMode_t.SERIALLINEMODE_EL6_22B,
	pComIn := ADR(Serial.MDP5001_600_Input.MDP5001_600_COM_TxPDO_Map_Inputs_Data_In_0),
	pComOut := ADR(Serial.MDP5001_600_Output.MDP5001_600_COM_RxPDO_Map_Outputs_Data_Out_0),
	ErrorID => SerialError,
	TxBuffer := Txbuffer,
	RxBuffer := RxBuffer
	);
*)	
	]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="107" Count="0" />
      <LineId Id="109" Count="0" />
      <LineId Id="112" Count="2" />
      <LineId Id="111" Count="0" />
      <LineId Id="115" Count="1" />
      <LineId Id="108" Count="0" />
      <LineId Id="117" Count="0" />
      <LineId Id="119" Count="0" />
      <LineId Id="118" Count="0" />
      <LineId Id="120" Count="0" />
      <LineId Id="2" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="15" Count="1" />
      <LineId Id="14" Count="0" />
      <LineId Id="20" Count="2" />
      <LineId Id="19" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="25" Count="1" />
      <LineId Id="24" Count="0" />
      <LineId Id="38" Count="2" />
      <LineId Id="49" Count="0" />
      <LineId Id="46" Count="2" />
      <LineId Id="56" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="57" Count="1" />
      <LineId Id="60" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="33" Count="2" />
      <LineId Id="51" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="52" Count="1" />
      <LineId Id="63" Count="1" />
      <LineId Id="69" Count="0" />
      <LineId Id="65" Count="1" />
      <LineId Id="68" Count="0" />
      <LineId Id="67" Count="0" />
      <LineId Id="73" Count="0" />
      <LineId Id="72" Count="0" />
      <LineId Id="77" Count="2" />
      <LineId Id="83" Count="1" />
      <LineId Id="76" Count="0" />
      <LineId Id="85" Count="0" />
      <LineId Id="75" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>